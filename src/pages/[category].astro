---
import { getCollection } from "astro:content";
import BaseLayout from "../layouts/BaseLayout.astro";

export async function getStaticPaths() {
  const categories = ["algorithms", "software", "meditations"];

  return categories.map((category) => {
    return {
      params: { category },
      props: { category },
    };
  });
}

const { category } = Astro.props;
const posts = await getCollection(
  "posts",
  (post) => post.data.category === category,
);

posts.sort((a, b) => {
  const dateA = a.data.date ? new Date(a.data.date) : new Date(0);
  const dateB = b.data.date ? new Date(b.data.date) : new Date(0);
  return dateB.getTime() - dateA.getTime();
});

const capitalizedCategory =
  category.charAt(0).toUpperCase() + category.slice(1);
---

<BaseLayout title={capitalizedCategory}>
  <div class="content">
    <h1>{capitalizedCategory}</h1>
    <div class="posts">
      {
        posts.map((post) => (
          <div class="post">
            <a href={`/posts/${category}/${post.slug}`}>{post.data.title}</a>
            {post.data.date && (
              <time datetime={post.data.date}>
                {new Date(post.data.date).toLocaleDateString("en-US", {
                  year: "numeric",
                  month: "long",
                  day: "numeric",
                })}
              </time>
            )}
          </div>
        ))
      }
    </div>
  </div>
</BaseLayout>

<style>
  .content {
    max-width: 800px;
    margin: 0 auto;
    padding: 20px;
  }

  h1 {
    margin-bottom: 30px;
  }

  .posts {
    list-style-type: none;
    padding: 0;
  }

  .post {
    margin-bottom: 20px;
    padding-bottom: 15px;
    border-bottom: 1px solid #eee;
  }

  .post a {
    display: block;
    font-size: 1.2em;
    text-decoration: underline;
    color: var(--topic-color, inherit);
  }

  time {
    display: block;
    font-size: 0.9em;
    color: #555;
    margin-top: 5px;
  }
</style>

<script define:vars={{ category }}>
  import { getTopicColor } from "../utils/colors.js";

  document.addEventListener("DOMContentLoaded", function () {
    document.documentElement.style.setProperty(
      "--topic-color",
      getTopicColor(category),
    );

    window.getTopicColor = getTopicColor;
  });
</script>
